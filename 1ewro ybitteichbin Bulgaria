local QuickHacksUI = {RainbowColorValue = 0, HueSelectionPosition = 0}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local PresetColor = Color3.fromRGB(44, 120, 224)
local CloseBind = Enum.KeyCode.RightControl
local CurrentUIBackgroundColor = Color3.fromRGB(30, 30, 30)

if game.CoreGui:FindFirstChild("QuickHacksUI") then
    game.CoreGui.QuickHacksUI:Destroy()
end

local ui = Instance.new("ScreenGui")
ui.Name = "QuickHacksUI"
ui.Parent = game.CoreGui
ui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

coroutine.wrap(function()
    while wait() do
        QuickHacksUI.RainbowColorValue = QuickHacksUI.RainbowColorValue + 1 / 255
        QuickHacksUI.HueSelectionPosition = QuickHacksUI.HueSelectionPosition + 1
        if QuickHacksUI.RainbowColorValue >= 1 then QuickHacksUI.RainbowColorValue = 0 end
        if QuickHacksUI.HueSelectionPosition == 80 then QuickHacksUI.HueSelectionPosition = 0 end
    end
end)()

local function MakeDraggable(topbarobject, object)
    local Dragging, DragInput, DragStart, StartPosition
    local function Update(input)
        local Delta = input.Position - DragStart
        local pos = UDim2.new(StartPosition.X.Scale, StartPosition.X.Offset + Delta.X, StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y)
        TweenService:Create(object, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = pos}):Play()
    end
    topbarobject.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPosition = object.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then Dragging = false end
            end)
        end
    end)
    topbarobject.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then Update(input) end
    end)
end

-- Loading Screen Implementation
local LoadingUI = Instance.new("ScreenGui")
LoadingUI.Name = "LoadingUI"
LoadingUI.Parent = game.CoreGui

local LoadingFrame = Instance.new("Frame")
LoadingFrame.Parent = LoadingUI
LoadingFrame.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
LoadingFrame.Size = UDim2.new(0, 100, 0, 100)
LoadingFrame.Position = UDim2.new(0.5, -50, 0.5, -50)

local LoadingText = Instance.new("TextLabel")
LoadingText.Parent = LoadingFrame
LoadingText.BackgroundTransparency = 1
LoadingText.Size = UDim2.new(1, 0, 0, 20)
LoadingText.Position = UDim2.new(0, 0, 0, 10)
LoadingText.Font = Enum.Font.Gotham
LoadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadingText.TextSize = 14

local ProgressText = Instance.new("TextLabel")
ProgressText.Parent = LoadingFrame
ProgressText.BackgroundTransparency = 1
ProgressText.Size = UDim2.new(0, 50, 0, 20)
ProgressText.Position = UDim2.new(0.75, 0, 0.6, 0)
ProgressText.Font = Enum.Font.Gotham
ProgressText.TextColor3 = Color3.fromRGB(255, 255, 255)
ProgressText.TextSize = 14

local LoadingStroke = Instance.new("UIStroke")
LoadingStroke.Parent = LoadingFrame
LoadingStroke.Color = Color3.fromRGB(255, 255, 255)
LoadingStroke.Thickness = 2

coroutine.wrap(function()
    local text = "Made by oz|"
    while wait(0.05) do
        for i = #text, 1, -1 do
            LoadingText.Text = string.sub(text, 1, i) .. "|"
            wait(0.05)
        end
        LoadingText.Text = "|"
        wait(0.1)
        for i = 1, #text do
            LoadingText.Text = string.sub(text, 1, i) .. "|"
            wait(0.05)
        end
        LoadingText.Text = text
        wait(0.3)
    end
end)()

coroutine.wrap(function()
    local dots = 0
    local progress = 0
    while wait(0.1) do
        dots = (dots + 1) % 4
        LoadingText.Text = "Loading UI" .. string.rep(".", dots)
        progress = math.min(progress + 1, 100)
        ProgressText.Text = progress .. "%"
        LoadingStroke.Color = Color3.fromHSV(progress/360, 1, 1)
        if progress == 100 then break end
    end
    wait(0.5)
    LoadingUI:Destroy()
end)()

function QuickHacksUI:Window(text, preset, closebind)
    CloseBind = closebind or Enum.KeyCode.RightControl
    PresetColor = preset or Color3.fromRGB(44, 120, 224)
    local fs = false
    local Main = Instance.new("Frame")
    local MainCorner = Instance.new("UICorner")
    local TabHold = Instance.new("Frame")
    local TabHoldStroke = Instance.new("UIStroke")
    local TabHoldLayout = Instance.new("UIListLayout")
    local Title = Instance.new("TextLabel")
    local TabFolder = Instance.new("Folder")
    local DragFrame = Instance.new("Frame")
    local MobileBtn = Instance.new("ImageButton")
    local CloseBtn = Instance.new("TextButton")
    local NotifyHolder = Instance.new("Frame")
    local NotifyLayout = Instance.new("UIListLayout")

    Main.Name = "Main"
    Main.Parent = ui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = CurrentUIBackgroundColor
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 0, 0, 0)
    Main.ClipsDescendants = true
    Main.Visible = true

    MainCorner.CornerRadius = UDim.new(0, 12)
    MainCorner.Parent = Main

    TabHold.Name = "TabHold"
    TabHold.Parent = Main
    TabHold.BackgroundTransparency = 1
    TabHold.Position = UDim2.new(0.034, 0, 0.147, 0)
    TabHold.Size = UDim2.new(0, 107, 0, 254)

    TabHoldStroke.Parent = TabHold
    TabHoldStroke.Color = Color3.fromRGB(0, 0, 0)
    TabHoldStroke.Thickness = 1.5
    TabHoldStroke.Transparency = 0.5

    TabHoldLayout.Name = "TabHoldLayout"
    TabHoldLayout.Parent = TabHold
    TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabHoldLayout.Padding = UDim.new(0, 11)

    Title.Name = "Title"
    Title.Parent = Main
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0.034, 0, 0.056, 0)
    Title.Size = UDim2.new(0, 200, 0, 23)
    Title.Font = Enum.Font.GothamSemibold
    Title.Text = text
    Title.TextColor3 = Color3.fromRGB(68, 68, 68)
    Title.TextSize = 12
    Title.TextXAlignment = Enum.TextXAlignment.Left

    DragFrame.Name = "DragFrame"
    DragFrame.Parent = Main
    DragFrame.BackgroundTransparency = 1
    DragFrame.Size = UDim2.new(0, 560, 0, 41)

    CloseBtn.Name = "CloseBtn"
    CloseBtn.Parent = Main
    CloseBtn.BackgroundTransparency = 1
    CloseBtn.Position = UDim2.new(0.95, 0, 0.056, 0)
    CloseBtn.Size = UDim2.new(0, 20, 0, 20)
    CloseBtn.Font = Enum.Font.GothamBold
    CloseBtn.Text = "X"
    CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseBtn.TextSize = 16

    NotifyHolder.Name = "NotifyHolder"
    NotifyHolder.Parent = ui
    NotifyHolder.BackgroundTransparency = 1
    NotifyHolder.Position = UDim2.new(1, -210, 1, -10)
    NotifyHolder.Size = UDim2.new(0, 200, 0, 300)
    NotifyHolder.AnchorPoint = Vector2.new(1, 1)

    NotifyLayout.Parent = NotifyHolder
    NotifyLayout.SortOrder = Enum.SortOrder.LayoutOrder
    NotifyLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    NotifyLayout.Padding = UDim.new(0, 5)

    if UserInputService.TouchEnabled then
        MobileBtn.Name = "MobileBtn"
        MobileBtn.Parent = ui
        MobileBtn.BackgroundTransparency = 1
        MobileBtn.Position = UDim2.new(0.949999988, -74, 0.5, -42)
        MobileBtn.Size = UDim2.new(0, 65, 0, 65)
        MobileBtn.Image = "rbxassetid://130039636229325"
        MakeDraggable(MobileBtn, MobileBtn)
        MobileBtn.MouseButton1Click:Connect(function()
            if Main.Size.X.Offset > 0 then
                TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)}):Play()
            else
                Main.Visible = true
                TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, 560, 0, 319)}):Play()
            end
        end)
    end

    Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.6, true)
    MakeDraggable(DragFrame, Main)

    CloseBtn.MouseButton1Click:Connect(function()
        QuickHacksUI:Notification("Close UI", "Are you sure?", "Yes", "No")
    end)

    local uitoggled = false
    UserInputService.InputBegan:Connect(function(ioudd)
        if io.KeyCode == CloseBind then
            if uitoggled == false then
                TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)}):Play()
                uitoggled = true
            else
                Main.Visible = true
                TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {Size = UDim2.new(0, 560, 0, 319)}):Play()
                uitoggled = false
            end
        end
    end)

    TabFolder.Name = "TabFolder"
    TabFolder.Parent = Main

    function QuickHacksUI:ChangePresetColor(toch)
        PresetColor = toch
    end

    function QuickHacksUI:Notification(texttitle, textdesc, textbtn1, textbtn2)
        local notifyUI = Instance.new("Frame")
        local NotificationFrame = Instance.new("Frame")
        local YesBtn = Instance.new("TextButton")
        local YesBtnCorner = Instance.new("UICorner")
        local YesBtnTitle = Instance.new("TextLabel")
        local NoBtn = Instance.new("TextButton")
        local NoBtnCorner = Instance.new("UICorner")
        local NoBtnTitle = Instance.new("TextLabel")
        local NotificationTitle = Instance.new("TextLabel")
        local NotificationDesc = Instance.new("TextLabel")
        local NotificationCorner = Instance.new("UICorner")

        notifyUI.Name = "notifyUI"
        notifyUI.Parent = NotifyHolder
        notifyUI.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        notifyUI.Size = UDim2.new(0, 200, 0, 0)
        notifyUI.Position = UDim2.new(0, 0, 1, 0)

        NotificationCorner.CornerRadius = UDim.new(0, 5)
        NotificationCorner.Parent = notifyUI

        NotificationTitle.Name = "NotificationTitle"
        NotificationTitle.Parent = notifyUI
        NotificationTitle.BackgroundTransparency = 1
        NotificationTitle.Position = UDim2.new(0.05, 0, 0.05, 0)
        NotificationTitle.Size = UDim2.new(0, 180, 0, 20)
        NotificationTitle.Font = Enum.Font.GothamBold
        NotificationTitle.Text = texttitle
        NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        NotificationTitle.TextSize = 14
        NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left

        NotificationDesc.Name = "NotificationDesc"
        NotificationDesc.Parent = notifyUI
        NotificationDesc.BackgroundTransparency = 1
        NotificationDesc.Position = UDim2.new(0.05, 0, 0.25, 0)
        NotificationDesc.Size = UDim2.new(0, 180, 0, 40)
        NotificationDesc.Font = Enum.Font.Gotham
        NotificationDesc.Text = textdesc
        NotificationDesc.TextColor3 = Color3.fromRGB(180, 180, 180)
        NotificationDesc.TextSize = 12
        NotificationDesc.TextWrapped = true
        NotificationDesc.TextXAlignment = Enum.TextXAlignment.Left

        YesBtn.Name = "YesBtn"
        YesBtn.Parent = notifyUI
        YesBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        YesBtn.Position = UDim2.new(0.05, 0, 0.75, 0)
        YesBtn.Size = UDim2.new(0, 85, 0, 25)
        YesBtn.AutoButtonColor = false
        YesBtn.Font = Enum.Font.SourceSans
        YesBtn.Text = ""

        YesBtnCorner.CornerRadius = UDim.new(0, 5)
        YesBtnCorner.Parent = YesBtn

        YesBtnTitle.Name = "YesBtnTitle"
        YesBtnTitle.Parent = YesBtn
        YesBtnTitle.BackgroundTransparency = 1
        YesBtnTitle.Size = UDim2.new(1, 0, 1, 0)
        YesBtnTitle.Font = Enum.Font.GothamBold
        YesBtnTitle.Text = textbtn1
        YesBtnTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
        YesBtnTitle.TextSize = 12

        NoBtn.Name = "NoBtn"
        NoBtn.Parent = notifyUI
        NoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        NoBtn.Position = UDim2.new(0.525, 0, 0.75, 0)
        NoBtn.Size = UDim2.new(0, 85, 0, 25)
        NoBtn.AutoButtonColor = false
        NoBtn.Font = Enum.Font.SourceSans
        NoBtn.Text = ""

        NoBtnCorner.CornerRadius = UDim.new(0, 5)
        NoBtnCorner.Parent = NoBtn

        NoBtnTitle.Name = "NoBtnTitle"
        NoBtnTitle.Parent = NoBtn
        NoBtnTitle.BackgroundTransparency = 1
        NoBtnTitle.Size = UDim2.new(1, 0, 1, 0)
        NoBtnTitle.Font = Enum.Font.GothamBold
        NoBtnTitle.Text = textbtn2
        NoBtnTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
        NoBtnTitle.TextSize = 12

        notifyUI:TweenSize(UDim2.new(0, 200, 0, 120), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        TweenService:Create(notifyUI, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0, 0)}):Play()

        YesBtn.MouseButton1Click:Connect(function()
            TweenService:Create(notifyUI, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 120)}):Play()
            wait(0.3)
            notifyUI:Destroy()
            ui:Destroy()
        end)

        NoBtn.MouseButton1Click:Connect(function()
            TweenService:Create(notifyUI, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 120)}):Play()
            wait(0.3)
            notifyUI:Destroy()
        end)

        if #NotifyHolder:GetChildren() > 5 then
            NotifyHolder:GetChildren()[1]:Destroy()
        end

        for _, notification in pairs(NotifyHolder:GetChildren()) do
            if notification:IsA("Frame") then
                TweenService:Create(notification, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0, -notification.Size.Y.Offset - NotifyLayout.Padding.Offset)}):Play()
            end
        end
    end

    local tabhold = {}
    function tabhold:Tab(text)
        local TabBtn = Instance.new("TextButton")
        local TabTitle = Instance.new("TextLabel")
        local TabBtnIndicator = Instance.new("Frame")
        local TabBtnIndicatorCorner = Instance.new("UICorner")

        TabBtn.Name = "TabBtn"
        TabBtn.Parent = TabHold
        TabBtn.BackgroundTransparency = 1
        TabBtn.Size = UDim2.new(0, 107, 0, 21)
        TabBtn.Font = Enum.Font.SourceSans
        TabBtn.Text = ""

        TabTitle.Name = "TabTitle"
        TabTitle.Parent = TabBtn
        TabTitle.BackgroundTransparency = 1
        TabTitle.Size = UDim2.new(0, 107, 0, 21)
        TabTitle.Font = Enum.Font.Gotham
        TabTitle.Text = text
        TabTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
        TabTitle.TextSize = 14
        TabTitle.TextXAlignment = Enum.TextXAlignment.Left

        TabBtnIndicator.Name = "TabBtnIndicator"
        TabBtnIndicator.Parent = TabBtn
        TabBtnIndicator.BackgroundColor3 = PresetColor
        TabBtnIndicator.BorderSizePixel = 0
        TabBtnIndicator.Position = UDim2.new(0, 0, 1, 0)
        TabBtnIndicator.Size = UDim2.new(0, 0, 0, 2)

        TabBtnIndicatorCorner.Parent = TabBtnIndicator

        coroutine.wrap(function()
            while wait() do TabBtnIndicator.BackgroundColor3 = PresetColor end
        end)()

        local Tab = Instance.new("ScrollingFrame")
        local TabStroke = Instance.new("UIStroke")
        local TabLayout = Instance.new("UIListLayout")

        Tab.Name = "Tab"
        Tab.Parent = TabFolder
        Tab.Active = true
        Tab.BackgroundTransparency = 1
        Tab.BorderSizePixel = 0
        Tab.Position = UDim2.new(0.314, 0, 0.147, 0)
        Tab.Size = UDim2.new(0, 373, 0, 254)
        Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
        Tab.ScrollBarThickness = 3
        Tab.Visible = false

        TabStroke.Parent = Tab
        TabStroke.Color = Color3.fromRGB(0, 0, 0)
        TabStroke.Thickness = 2.5
        TabStroke.Transparency = 0.5

        TabLayout.Name = "TabLayout"
        TabLayout.Parent = Tab
        TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabLayout.Padding = UDim.new(0, 6)

        if not fs then
            fs = true
            TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
            TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            Tab.Visible = true
        end

        TabBtn.MouseButton1Click:Connect(function()
            for _, v in next, TabFolder:GetChildren() do
                if v.Name == "Tab" then v.Visible = false end
                Tab.Visible = true
            end
            for _, v in next, TabHold:GetChildren() do
                if v.Name == "TabBtn" then
                    v.TabBtnIndicator:TweenSize(UDim2.new(0, 0, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                    TabBtnIndicator:TweenSize(UDim2.new(0, 13, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                    TweenService:Create(v.TabTitle, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(150, 150, 150)}):Play()
                    TweenService:Create(TabTitle, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                end
            end
        end)

        local tabcontent = {}
        function tabcontent:Button(text, callback)
            local Button = Instance.new("TextButton")
            local ButtonCorner = Instance.new("UICorner")
            local ButtonTitle = Instance.new("TextLabel")
            local ButtonStroke = Instance.new("UIStroke")

            Button.Name = "Button"
            Button.Parent = Tab
            Button.BackgroundColor3 = CurrentUIBackgroundColor
            Button.Size = UDim2.new(0, 363, 0, 42)
            Button.AutoButtonColor = false
            Button.Font = Enum.Font.SourceSans
            Button.Text = ""

            ButtonCorner.CornerRadius = UDim.new(0, 5)
            ButtonCorner.Parent = Button

            ButtonStroke.Parent = Button
            ButtonStroke.Thickness = 1
            ButtonStroke.Transparency = 0.3
            ButtonStroke.Color = Color3.fromRGB(0, 0, 0)
            ButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

            ButtonTitle.Name = "ButtonTitle"
            ButtonTitle.Parent = Button
            ButtonTitle.BackgroundTransparency = 1
            ButtonTitle.Position = UDim2.new(0.036, 0, 0, 0)
            ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
            ButtonTitle.Font = Enum.Font.Gotham
            ButtonTitle.Text = text or "Unnamed Button"
            ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ButtonTitle.TextSize = 14
            ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left

            Button.MouseButton1Click:Connect(function()
                TweenService:Create(Button, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.02, 0, 0, 0)}):Play()
                wait(0.1)
                TweenService:Create(Button, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0, 0, 0, 0)}):Play()
                pcall(callback)
            end)

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Slider(text, min, max, start, callback)
            local dragging = false
            local Slider = Instance.new("TextButton")
            local SliderCorner = Instance.new("UICorner")
            local SliderTitle = Instance.new("TextLabel")
            local SliderValue = Instance.new("TextLabel")
            local SlideFrame = Instance.new("Frame")
            local CurrentValueFrame = Instance.new("Frame")
            local SlideCircle = Instance.new("ImageButton")
            local SliderStroke = Instance.new("UIStroke")

            Slider.Name = "Slider"
            Slider.Parent = Tab
            Slider.BackgroundColor3 = CurrentUIBackgroundColor
            Slider.Size = UDim2.new(0, 363, 0, 60)
            Slider.AutoButtonColor = false
            Slider.Font = Enum.Font.SourceSans
            Slider.Text = ""

            SliderCorner.CornerRadius = UDim.new(0, 5)
            SliderCorner.Parent = Slider

            SliderStroke.Parent = Slider
            SliderStroke.Thickness = 0.9
            SliderStroke.Transparency = 0.3
            SliderStroke.Color = Color3.fromRGB(0,0,0)
            SliderStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

            SliderTitle.Name = "SliderTitle"
            SliderTitle.Parent = Slider
            SliderTitle.BackgroundTransparency = 1
            SliderTitle.Position = UDim2.new(0.035, 0, 0, 0)
            SliderTitle.Size = UDim2.new(0, 187, 0, 42)
            SliderTitle.Font = Enum.Font.Gotham
            SliderTitle.Text = text or "Unnamed Slider"
            SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderTitle.TextSize = 14
            SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

            SliderValue.Name = "SliderValue"
            SliderValue.Parent = Slider
            SliderValue.BackgroundTransparency = 1
            SliderValue.Position = UDim2.new(0.035, 0, 0, 0)
            SliderValue.Size = UDim2.new(0, 335, 0, 42)
            SliderValue.Font = Enum.Font.Gotham
            SliderValue.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextSize = 14
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right

            SlideFrame.Name = "SlideFrame"
            SlideFrame.Parent = Slider
            SlideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            SlideFrame.BorderSizePixel = 0
            SlideFrame.Position = UDim2.new(0.034, 0, 0.686, 0)
            SlideFrame.Size = UDim2.new(0, 335, 0, 3)

            CurrentValueFrame.Name = "CurrentValueFrame"
            CurrentValueFrame.Parent = SlideFrame
            CurrentValueFrame.BackgroundColor3 = PresetColor
            CurrentValueFrame.BorderSizePixel = 0
            CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)

            SlideCircle.Name = "SlideCircle"
            SlideCircle.Parent = SlideFrame
            SlideCircle.BackgroundTransparency = 1
            SlideCircle.Position = UDim2.new((start or 0) / max, -6, -1.304, 0)
            SlideCircle.Size = UDim2.new(0, 20, 0, 20) -- Larger touch area for mobile
            SlideCircle.Image = "rbxassetid://3570695787"
            SlideCircle.ImageColor3 = PresetColor

            coroutine.wrap(function()
                while wait() do
                    CurrentValueFrame.BackgroundColor3 = PresetColor
                    SlideCircle.ImageColor3 = PresetColor
                end
            end)()

            local function move(input)
                local posX = math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1)
                local value = math.floor((posX * (max - min)) + min + 0.5) -- Improved precision
                SlideCircle.Position = UDim2.new(posX, -6, -1.304, 0)
                CurrentValueFrame.Size = UDim2.new(posX, 0, 0, 3)
                SliderValue.Text = tostring(value)
                pcall(callback, value)
            end

            SlideCircle.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    move(input)
                end
            end)

            SlideCircle.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = false
                end
            end)

            UserInputService.InputChanged:Connect(function(input)
                if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                    move(input)
                end
            end)

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
        end

        function tabcontent:Dropdown(text, list, callback)
            local droptog = false
            local framesize = 0
            local itemcount = 0

            local Dropdown = Instance.new("Frame")
            local DropdownCorner = Instance.new("UICorner")
            local DropdownStroke = Instance.new("UIStroke")
            local DropdownBtn = Instance.new("TextButton")
            local DropdownTitle = Instance.new("TextLabel")
            local ArrowImg = Instance.new("ImageLabel")
            local DropItemHolder = Instance.new("ScrollingFrame")
            local DropLayout = Instance.new("UIListLayout")

            Dropdown.Name = "Dropdown"
            Dropdown.Parent = Tab
            Dropdown.BackgroundColor3 = CurrentUIBackgroundColor
            Dropdown.ClipsDescendants = true
            Dropdown.Size = UDim2.new(0, 363, 0, 42)

            DropdownCorner.CornerRadius = UDim.new(0, 8) -- Modern rounded corners
            DropdownCorner.Parent = Dropdown

            DropdownStroke.Parent = Dropdown
            DropdownStroke.Thickness = 1
            DropdownStroke.Transparency = 0.2
            DropdownStroke.Color = Color3.fromRGB(0,0,0)
            DropdownStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

            DropdownBtn.Name = "DropdownBtn"
            DropdownBtn.Parent = Dropdown
            DropdownBtn.BackgroundTransparency = 1
            DropdownBtn.Size = UDim2.new(0, 363, 0, 42)
            DropdownBtn.Font = Enum.Font.SourceSans
            DropdownBtn.Text = ""

            DropdownTitle.Name = "DropdownTitle"
            DropdownTitle.Parent = Dropdown
            DropdownTitle.BackgroundTransparency = 1
            DropdownTitle.Position = UDim2.new(0.036, 0, 0, 0)
            DropdownTitle.Size = UDim2.new(0, 300, 0, 42)
            DropdownTitle.Font = Enum.Font.Gotham
            DropdownTitle.Text = text or "Unnamed Dropdown"
            DropdownTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropdownTitle.TextSize = 14
            DropdownTitle.TextXAlignment = Enum.TextXAlignment.Left

            ArrowImg.Name = "ArrowImg"
            ArrowImg.Parent = DropdownTitle
            ArrowImg.BackgroundTransparency = 1
            ArrowImg.Position = UDim2.new(1, -30, 0.19, 0)
            ArrowImg.Size = UDim2.new(0, 26, 0, 26)
            ArrowImg.Image = "http://www.roblox.com/asset/?id=6034818375"

            DropItemHolder.Name = "DropItemHolder"
            DropItemHolder.Parent = Dropdown
            DropItemHolder.Active = true
            DropItemHolder.BackgroundTransparency = 1
            DropItemHolder.BorderSizePixel = 0
            DropItemHolder.Position = UDim2.new(0, 0, 1, 0)
            DropItemHolder.Size = UDim2.new(0, 363, 0, 0)
            DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
            DropItemHolder.ScrollBarThickness = 3

            DropLayout.Name = "DropLayout"
            DropLayout.Parent = DropItemHolder
            DropLayout.SortOrder = Enum.SortOrder.LayoutOrder
            DropLayout.Padding = UDim.new(0, 2)

            DropdownBtn.MouseButton1Click:Connect(function()
                if droptog == false then
                    Dropdown:TweenSize(UDim2.new(0, 363, 0, 55 + framesize), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                    TweenService:Create(ArrowImg, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 270}):Play()
                else
                    Dropdown:TweenSize(UDim2.new(0, 363, 0, 42), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                    TweenService:Create(ArrowImg, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                end
                droptog = not droptog
                wait(0.2)
                Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
            end)

            local function updateItems(items)
                for _, item in pairs(DropItemHolder:GetChildren()) do
                    if item:IsA("TextButton") then item:Destroy() end
                end
                framesize = 0
                itemcount = 0
                
                for _, v in next, items do
                    itemcount = itemcount + 1
                    if itemcount <= 5 then
                        framesize = framesize + 26
                        DropItemHolder.Size = UDim2.new(0, 363, 0, framesize)
                    end
                    local Item = Instance.new("TextButton")
                    local ItemCorner = Instance.new("UICorner")
                    local ItemStroke = Instance.new("UIStroke")

                    Item.Name = "Item"
                    Item.Parent = DropItemHolder
                    Item.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                    Item.ClipsDescendants = true
                    Item.Size = UDim2.new(0, 357, 0, 25)
                    Item.AutoButtonColor = false
                    Item.Font = Enum.Font.Gotham
                    Item.Text = v
                    Item.TextColor3 = Color3.fromRGB(255, 255, 255)
                    Item.TextSize = 14

                    ItemCorner.CornerRadius = UDim.new(0, 4)
                    ItemCorner.Parent = Item

                    ItemStroke.Parent = Item
                    ItemStroke.Thickness = 1
                    ItemStroke.Transparency = 0.3
                    ItemStroke.Color = Color3.fromRGB(0,0,0)
                    ItemStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

                    Item.MouseButton1Click:Connect(function()
                        droptog = false
                        DropdownTitle.Text = text .. " - " .. v
                        pcall(callback, v)
                        Dropdown:TweenSize(UDim2.new(0, 363, 0, 42), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                        TweenService:Create(ArrowImg, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                        wait(0.2)
                        Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
                    end)

                    DropItemHolder.CanvasSize = UDim2.new(0, 0, 0, DropLayout.AbsoluteContentSize.Y)
                end
            end

            updateItems(list)

            function tabcontent:Update(newList)
                updateItems(newList)
            end

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
            return tabcontent
        end

        function tabcontent:Colorpicker(text, preset, callback)
            local ColorPickerToggled = false
            local ColorH, ColorS, ColorV = Color3.toHSV(preset)
            local ColorInput, HueInput

            local Colorpicker = Instance.new("Frame")
            local ColorpickerCorner = Instance.new("UICorner")
            local ColorpickerStroke = Instance.new("UIStroke")
            local ColorpickerTitle = Instance.new("TextLabel")
            local BoxColor = Instance.new("Frame")
            local BoxColorCorner = Instance.new("UICorner")
            local ColorpickerBtn = Instance.new("TextButton")
            local Color = Instance.new("ImageLabel")
            local ColorCorner = Instance.new("UICorner")
            local ColorSelection = Instance.new("ImageLabel")
            local Hue = Instance.new("ImageLabel")
            local HueCorner = Instance.new("UICorner")
            local HueGradient = Instance.new("UIGradient")
            local HueSelection = Instance.new("ImageLabel")

            Colorpicker.Name = "Colorpicker"
            Colorpicker.Parent = Tab
            Colorpicker.BackgroundColor3 = CurrentUIBackgroundColor
            Colorpicker.ClipsDescendants = true
            Colorpicker.Size = UDim2.new(0, 363, 0, 42)

            ColorpickerCorner.CornerRadius = UDim.new(0, 5)
            ColorpickerCorner.Parent = Colorpicker

            ColorpickerStroke.Parent = Colorpicker
            ColorpickerStroke.Thickness = 0.9
            ColorpickerStroke.Transparency = 0.3
            ColorpickerStroke.Color = Color3.fromRGB(0,0,0)
            ColorpickerStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

            ColorpickerTitle.Name = "ColorpickerTitle"
            ColorpickerTitle.Parent = Colorpicker
            ColorpickerTitle.BackgroundTransparency = 1
            ColorpickerTitle.Position = UDim2.new(0.035, 0, 0, 0)
            ColorpickerTitle.Size = UDim2.new(0, 187, 0, 42)
            ColorpickerTitle.Font = Enum.Font.Gotham
            ColorpickerTitle.Text = text or "Unnamed Colorpicker"
            ColorpickerTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            ColorpickerTitle.TextSize = 14
            ColorpickerTitle.TextXAlignment = Enum.TextXAlignment.Left

            BoxColor.Name = "BoxColor"
            BoxColor.Parent = ColorpickerTitle
            BoxColor.BackgroundColor3 = preset
            BoxColor.Position = UDim2.new(1.604, 0, 0.214, 0)
            BoxColor.Size = UDim2.new(0, 41, 0, 23)

            BoxColorCorner.CornerRadius = UDim.new(0, 5)
            BoxColorCorner.Parent = BoxColor

            ColorpickerBtn.Name = "ColorpickerBtn"
            ColorpickerBtn.Parent = Colorpicker
            ColorpickerBtn.BackgroundTransparency = 1
            ColorpickerBtn.Size = UDim2.new(0, 363, 0, 42)
            ColorpickerBtn.Font = Enum.Font.SourceSans
            ColorpickerBtn.Text = ""

            Color.Name = "Color"
            Color.Parent = Colorpicker
            Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
            Color.Position = UDim2.new(0, 0, 0, 42)
            Color.Size = UDim2.new(0, 194, 0, 80)
            Color.ZIndex = 10
            Color.Image = "rbxassetid://4155801252"

            ColorCorner.CornerRadius = UDim.new(0, 3)
            ColorCorner.Parent = Color

            ColorSelection.Name = "ColorSelection"
            ColorSelection.Parent = Color
            ColorSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            ColorSelection.BackgroundTransparency = 1
            ColorSelection.Position = UDim2.new(ColorS, 0, 1 - ColorV, 0)
            ColorSelection.Size = UDim2.new(0, 18, 0, 18)
            ColorSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
            ColorSelection.ScaleType = Enum.ScaleType.Fit
            ColorSelection.Visible = false

            Hue.Name = "Hue"
            Hue.Parent = Colorpicker
            Hue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Hue.Position = UDim2.new(0, 202, 0, 42)
            Hue.Size = UDim2.new(0, 25, 0, 80)

            HueCorner.CornerRadius = UDim.new(0, 3)
            HueCorner.Parent = Hue

            HueGradient.Color = ColorSequence.new {
                ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 4)),
                ColorSequenceKeypoint.new(0.2, Color3.fromRGB(234, 255, 0)),
                ColorSequenceKeypoint.new(0.4, Color3.fromRGB(21, 255, 0)),
                ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 255, 255)),
                ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 17, 255)),
                ColorSequenceKeypoint.new(0.9, Color3.fromRGB(255, 0, 251)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 4))
            }
            HueGradient.Rotation = 270
            HueGradient.Parent = Hue

            HueSelection.Name = "HueSelection"
            HueSelection.Parent = Hue
            HueSelection.AnchorPoint = Vector2.new(0.5, 0.5)
            HueSelection.BackgroundTransparency = 1
            HueSelection.Position = UDim2.new(0.48, 0, 1 - ColorH)
            HueSelection.Size = UDim2.new(0, 18, 0, 18)
            HueSelection.Image = "http://www.roblox.com/asset/?id=4805639000"
            HueSelection.Visible = false

            ColorpickerBtn.MouseButton1Click:Connect(function()
                if ColorPickerToggled == false then
                    ColorSelection.Visible = true
                    HueSelection.Visible = true
                    Colorpicker:TweenSize(UDim2.new(0, 363, 0, 132), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                else
                    ColorSelection.Visible = false
                    HueSelection.Visible = false
                    Colorpicker:TweenSize(UDim2.new(0, 363, 0, 42), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.2, true)
                end
                ColorPickerToggled = not ColorPickerToggled
                wait(0.2)
                Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
            end)

            local function UpdateColorPicker()
                BoxColor.BackgroundColor3 = Color3.fromHSV(ColorH, ColorS, ColorV)
                Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
                pcall(callback, BoxColor.BackgroundColor3)
            end

            local function moveColor(input)
                if ColorPickerToggled then
                    local ColorX = math.clamp((input.Position.X - Color.AbsolutePosition.X) / Color.AbsoluteSize.X, 0, 1)
                    local ColorY = math.clamp((input.Position.Y - Color.AbsolutePosition.Y) / Color.AbsoluteSize.Y, 0, 1)
                    TweenService:Create(ColorSelection, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(ColorX, 0, ColorY, 0)}):Play()
                    ColorS = ColorX
                    ColorV = 1 - ColorY
                    UpdateColorPicker()
                end
            end

            local function moveHue(input)
                if ColorPickerToggled then
                    local HueY = math.clamp((input.Position.Y - Hue.AbsolutePosition.Y) / Hue.AbsoluteSize.Y, 0, 1)
                    TweenService:Create(HueSelection, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.48, 0, HueY, 0)}):Play()
                    ColorH = 1 - HueY
                    UpdateColorPicker()
                end
            end

            Color.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    if ColorInput then ColorInput:Disconnect() end
                    ColorInput = RunService.RenderStepped:Connect(function() moveColor(input) end)
                end
            end)

            Color.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    if ColorInput then ColorInput:Disconnect() end
                end
            end)

            Hue.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    if HueInput then HueInput:Disconnect() end
                    HueInput = RunService.RenderStepped:Connect(function() moveHue(input) end)
                end
            end)

            Hue.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    if HueInput then HueInput:Disconnect() end
                end
            end)

            function tabcontent:Color(r, g, b)
                local newColor = Color3.fromRGB(r, g, b)
                ColorH, ColorS, ColorV = Color3.toHSV(newColor)
                BoxColor.BackgroundColor3 = newColor
                Color.BackgroundColor3 = Color3.fromHSV(ColorH, 1, 1)
                ColorSelection.Position = UDim2.new(ColorS, 0, 1 - ColorV, 0)
                HueSelection.Position = UDim2.new(0.48, 0, 1 - ColorH)
                pcall(callback, newColor)
            end

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
            return tabcontent
        end

        function tabcontent:Label(text)
            local Label = Instance.new("TextButton")
            local LabelCorner = Instance.new("UICorner")
            local LabelTitle = Instance.new("TextLabel")
            local LabelStroke = Instance.new("UIStroke")

            Label.Name = "Label"
            Label.Parent = Tab
            Label.BackgroundColor3 = CurrentUIBackgroundColor
            Label.Size = UDim2.new(0, 363, 0, 42)
            Label.AutoButtonColor = false
            Label.Font = Enum.Font.SourceSans
            Label.Text = ""

            LabelCorner.CornerRadius = UDim.new(0, 5)
            LabelCorner.Parent = Label

            LabelStroke.Parent = Label
            LabelStroke.Thickness = 0.9
            LabelStroke.Transparency = 0.3
            LabelStroke.Color = Color3.fromRGB(0,0,0)
            LabelStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

            LabelTitle.Name = "LabelTitle"
            LabelTitle.Parent = Label
            LabelTitle.BackgroundTransparency = 1
            LabelTitle.Position = UDim2.new(0.036, 0, 0, 0)
            LabelTitle.Size = UDim2.new(0, 187, 0, 42)
            LabelTitle.Font = Enum.Font.Gotham
            LabelTitle.Text = text or "Unnamed Label"
            LabelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            LabelTitle.TextSize = 14
            LabelTitle.TextXAlignment = Enum.TextXAlignment.Left

            function tabcontent:Text(newText)
                LabelTitle.Text = newText
            end

            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
            return tabcontent
        end

        return tabcontent
    end

    return tabhold
end

return QuickHacksUI
